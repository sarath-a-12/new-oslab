alias userSP R0;
userSP = SP;
 
[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 13] = userSP;
SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 11] * 512 - 1;

[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 9]  = 9; //mode is set to 9
alias fileName R1;
fileName = [[PTBR + (userSP/512)*2]*512 + (userSP%512)];
alias counter R2;
counter = 0;
alias flag R3;
flag = 0;
while(counter<60) do //60 is MAX_FILE_NUM
	if([INODE_TABLE + 16*counter + 1]==fileName && [INODE_TABLE + 16*counter] == EXEC) then
		flag = 1;
		break;
	endif;
	counter = counter + 1;
endwhile;
if(flag==0) then
	[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 9]  = 0; //mode is set to 0 for resuming user process
	[[PTBR+((userSP-1)/512)*2]*512 + (userSP-1)%512] = -1; //return value -1 for failure
	SP = userSP;	
	ireturn;
endif;
//Do not use counter/R2 for anything else
multipush(R0,R1,R2,R3);
R1 = 3;
call MOD_1;
multipop(R0,R1,R2,R3);
alias userAreaPage R3;
userAreaPage = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 11];
[SYSTEM_STATUS_TABLE + 2] =[SYSTEM_STATUS_TABLE + 2] - 1; //decrementing MEM_FREE_COUNT

