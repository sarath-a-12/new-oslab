alias functionNum R1;
if(functionNum == 1) then
	[SYSTEM_STATUS_TABLE + 3] = [SYSTEM_STATUS_TABLE + 3] + 1; //Do not increment the WAIT_MEM_COUNT in busy loop (an important step ) ??
	while([SYSTEM_STATUS_TABLE + 2] == 0) do 
		[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 4] = WAIT_MEM; 
		multipush(R1,R2);
		call MOD_5; // blocking the process
		multipop(R1,R2);
	endwhile;
	[SYSTEM_STATUS_TABLE + 2] = [SYSTEM_STATUS_TABLE + 2] - 1;
	[SYSTEM_STATUS_TABLE + 3] = [SYSTEM_STATUS_TABLE + 3] - 1; 
	alias counter R2;
	counter = 83;
	while(counter<129) do 
		if([MEMORY_FREE_LIST + counter] == 0) then
			[MEMORY_FREE_LIST + counter] = 1;
			R0 = counter;
			break;
		endif;
		counter = counter + 1;
	endwhile;
	return;
endif;
if(functionNum == 2) then
	[MEMORY_FREE_LIST + R2] = [MEMORY_FREE_LIST + R2] - 1;
	if([MEMORY_FREE_LIST + R2] == 0) then //page is free
		[SYSTEM_STATUS_TABLE + 2] = [SYSTEM_STATUS_TABLE + 2] + 1;
	endif;
	alias counter R3;
	counter = 1;
	while(counter<16) do 
		if([PROCESS_TABLE + counter*16 + 4] == WAIT_MEM) then 
		[PROCESS_TABLE + counter*16 + 4] = READY;
		endif;
		counter = counter + 1;
	endwhile;
	return;
endif;
