//Sem-lock - 19
//Sem-unlock-20

alias sys_call_number R5;
alias semDescriptor R6;
alias returnValue R7;
sys_call_number = [[PTBR + ((SP-5)/512)*2]*512 + (SP-5)%512];
semDescriptor = [[PTBR + ((SP-4)/512)*2]*512 + (SP-4)%512];
returnValue = [[PTBR + ((SP-1)/512)*2]*512 + (SP-1)%512];
[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 13] = SP;
SP = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 +11]*512-1;

if(sys_call_number == INT_SEMLOCK) then
    [PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 9] = INT_SEMLOCK;
    if(semDescriptor<0 || semDescriptor>7 || [[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 11]*512 + RESOURCE_TABLE_OFFSET + 23] == 2313123) then//invalid check??
        returnValue = -1;
        [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 9] = 0;
        SP = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 13];
        ireturn;
    endif;
    while([SEMAPHORE_TABLE + 3*semDescriptor] != [SYSTEM_STATUS_TABLE + 1]) do
        [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 4] = WAIT_SEMAPHORE;
        [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 5] = semDescriptor;
        call MOD_5;
    endwhile;
    [SEMAPHORE_TABLE + 3*semDescriptor] = [SYSTEM_STATUS_TABLE + 1];
endif;
if(sys_call_number == INT_SEMUNLOCK) then
    [PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 9] = INT_SEMLOCK;
    if(semDescriptor<0 || semDescriptor>7 || [[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 11]*512 + RESOURCE_TABLE_OFFSET + 23] == 2313123) then//invalid check??
        returnValue = -1;
        [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 9] = 0;
        SP = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 13];
        ireturn;
    endif;
    if([SEMAPHORE_TABLE + 3*semDescriptor]!=-1) then
        if([SEMAPHORE_TABLE + 3*semDescriptor]!= [SYSTEM_STATUS_TABLE + 1]) then
            returnValue = -2;
            [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 9] = 0;
            SP = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 13];
            ireturn;
        endif;
    [SEMAPHORE_TABLE + 3*semDescriptor]= -1;
    alias ctr R8;
    ctr = 0;
    while(ctr<16) do
        if([PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 4]==WAIT_SEMAPHORE && [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 5] == semDescriptor) then
            [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 4] = READY;
        endif;
        ctr = ctr +1;
    endwhile;
    endif;
endif;

returnValue = 0;
[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 9] = 0;
SP = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 13];
ireturn;
