loadi(54,67);
loadi(55,68); //for boot-module

loadi(69,11);
loadi(70,12); //Idle-code loader	


SP = 82*512-1;
call BOOT_MODULE;

PTBR = PAGE_TABLE_BASE;
PTLR = 10;

//Shared Library
[PTBR+0] = 63;
[PTBR+1] = "0100";
[PTBR+2] = 64;
[PTBR+3] = "0100";

//Heap
[PTBR+4] = -1;
[PTBR+5] = "0000";
[PTBR+6] = -1;
[PTBR+7] = "0000";

//Code
[PTBR+8] = 69;
[PTBR+9] = "0100";
[PTBR+10] = 70;
[PTBR+11] = "0100";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

//Stack
[PTBR+16] = 81;
[PTBR+17] = "0110";
[PTBR+18] = -1;
[PTBR+19] = "0000";

[PROCESS_TABLE+1] = 0; //PID
[PROCESS_TABLE + 11] = 82; //user area
[PROCESS_TABLE + 12] = 0; //KPTR
[PROCESS_TABLE + 13] = 8*512; //UPTR
[PROCESS_TABLE + 14] = PAGE_TABLE_BASE;
[PROCESS_TABLE + 15] = PTLR;


[SYSTEM_STATUS_TABLE + 1] = 0; //current pid
[PROCESS_TABLE + 4] = RUNNING; //Idle is set to run
[81*512] = [69*512+1]; //IDLE Process entry point
PTBR = PAGE_TABLE_BASE;
SP = 8*512;
ireturn;

// =====================================================================================================================================

